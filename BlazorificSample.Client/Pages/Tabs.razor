@inherits AppComponentBase
@page "/tabs"

<div class="container mt-4">
    <CandyTabSet @ref="TabSet">
        <CandyTab Title="Tab 1">
            <div class="row">
                <div class="col-sm">
                    This is tab 1 content <br />
                    <button class="btn btn-danger" @onclick="() => ActivateTab(2)">Activate Tab 2</button>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <CandyFormGroup Label="Start Year" PrependIconClass="fas fa-calendar"
                                    HelpText="This is some sample text.">
                        <input type="number" class="form-control" @bind="Year" min="2009" max="@(DateTime.Today.Year + 1)" />
                    </CandyFormGroup>
                </div>
                <div class="col">
                    <CandyFormGroup Label="Start Year" PrependIconClass="fas fa-calendar"
                                    HelpText="This is some sample text.">
                        <input type="number" class="form-control" @bind="Year" min="2009" max="@(DateTime.Today.Year + 1)" />
                    </CandyFormGroup>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <CandyFormGroup Label="Start Year" PrependIconClass="fas fa-calendar" UseHorizontalLayout="true"
                                    HelpText="This is some sample text." UseHelpTooltip="true">
                        <input type="number" class="form-control" @bind="Year" min="2009" max="@(DateTime.Today.Year + 1)" />
                    </CandyFormGroup>
                </div>
            </div>
        </CandyTab>
        <CandyTab Title="Tab 2">
            <div class="row">
                <div class="col-sm">
                    This is tab 2 content <br />
                    <button class="btn btn-danger" @onclick="() => ActivateTab(3)">Activate Tab 3</button>
                    @if (ThemeNames != null)
                    {
                        <div class="mt-4">Theme Selector Example</div>
                        <ul>
                            @foreach (var themeName in ThemeNames)
                            {
                                <li>
                                    @if (CurrentThemeName != themeName)
                                    {
                                    <a href="#" @onclick="async () => await ApplyTheme(themeName)" @onclick:preventDefault="true">@themeName</a>
                                    }
                                    else
                                    {
                                        @themeName
                                    }
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </CandyTab>
        <CandyTab Title="Tab 3">
            <div class="row">
                <div class="col-sm">
                    This is tab 3 content <br />
                    <button class="btn btn-danger" @onclick="() => ActivateTab(1)">Activate Tab 1</button>
                </div>
            </div>

        </CandyTab>
    </CandyTabSet>
</div>

@code{
    protected CandyTabSet TabSet { get; set; }

    protected int? Year { get; set; }

    protected ICollection<string> ThemeNames { get; set; }

    protected string CurrentThemeName { get; set; }

    private async Task ActivateTab(int tabNumber)
    {
        await TabSet.Tabs[tabNumber - 1].Show();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ThemeNames = await Js.GetThemeNames();
            CurrentThemeName = await Js.GetCurrentThemeName();
            StateHasChanged();
        }
    }

    protected async Task ApplyTheme(string themeName)
    {
        await Js.ApplyTheme(themeName);
        CurrentThemeName = await Js.GetCurrentThemeName();
        await Js.StorageSetItem(ApplicationState.ThemeStorageKey, CurrentThemeName);
    }
}