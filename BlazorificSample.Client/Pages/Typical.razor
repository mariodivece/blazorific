@inherits AppComponentBase
@page "/"

<div class="container mt-4">
    <CandyGrid DataAdapter="DataAccess.ProductsDataAdapter" OnBodyRowDoubleClick="@OnBodyRowDoubleClick" LocalStorageKey="Grid.Sample.State">
        <ToolbarTemplate>
            <div class="btn-toolbar" role="toolbar">
                <div class="btn-group btn-group-sm" role="group">
                    <button class="btn btn-link" type="button" @onclick="_ => context.QueueDataUpdate()"><i class="fas fa-plus"></i>&nbsp;Refresh</button>
                    <button class="btn btn-link" type="button" @onclick="_ => ToggleCheckedForAll(context)"><i class="far fa-check-square"></i>&nbsp;Toggle Checks</button>
                    <button class="btn btn-link" type="button" @onclick="OnModalButtonClick"><i class="fas fa-print"></i>&nbsp;Test Modal</button>
                </div>
            </div>
        </ToolbarTemplate>
        <CandyGridColumns>
            <CandyGridColumn Title="ID" Field="@nameof(Product.ProductId)" IsSortable="true" Width="2"
                             OnDetailsButtonClick="OnDetailsButtonClick"
                             OnEditButtonClick="OnEditButtonClick"
                             OnCellCheckedChanged="OnCellCheckChanged" CheckedProperty="@nameof(Product.IsChecked)" />
            <CandyGridColumn Title="Name" Field="@nameof(Product.Name)" IsSearchable="true" IsSortable="true" Width="2">
                <HeaderTemplate>
                    @($"Field: {context.Field}")
                </HeaderTemplate>
            </CandyGridColumn>
            <CandyGridColumn Title="Description" Field="@nameof(Product.Description)" IsSortable="true" Width="6" Context="t">
                <DataTemplate>
                    @($"{t.Item<Product>().Description}")
                </DataTemplate>
            </CandyGridColumn>
            <CandyGridColumn Title="Price" Field="@nameof(Product.Price)" FormatString="{0:c2}" Width="2" IsSortable="true" Aggregate="AggregationFunction.Average" />
            <CandyGridColumn Title="Stock" Field="@nameof(Product.StockCount)" Width="1" IsSortable="true"
                             FilterOptionsProvider="@(async () => await DataAccess.GetProductFilterOptionsAsync(nameof(Product.StockCount)))" />

            <CandyGridColumn Title="Date" Context="t">
                <DataTemplate>
                    @if (!t.IsFooter)
                    {
                        @($"UID: {t.Item<Product>().DateCreated.ToShortDateString()}")
                    }
                </DataTemplate>
            </CandyGridColumn>
        </CandyGridColumns>
    </CandyGrid>
</div>

<CandyModal @ref="TestDialog" Title="Hey There!" Size="CandyModal.Sizes.Large" Center="false">
    <ChildContent>
        <div>This is some sample content!</div>
    </ChildContent>
    <Footer>
        Footer content is optional
    </Footer>
</CandyModal>

<CandyModal @ref="EditDialog" Title="Editing Item" Size="CandyModal.Sizes.Default" Center="true">
    <ChildContent>
        @if (EditorItem == null)
        {
            <div>No item to edit :(</div>
        }
        else
        {
            <div>Show and editor for @EditorItem.Name</div>
        }
    </ChildContent>
    <Footer>
        <button class="btn btn-success"><i class="fas fa-check"></i>&nbsp;Save Item! (It actually doesn't)</button>
    </Footer>
</CandyModal>