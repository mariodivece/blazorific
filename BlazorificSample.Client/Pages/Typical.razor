@inherits AppComponentBase
@page "/"

<div class="container mt-4">
    <CandyGrid DataAdapter="DataAccess.ProductsDataAdapter" OnBodyRowDoubleClick="@OnBodyRowDoubleClick">
        <ToolbarTemplate>
            <div class="btn-toolbar" role="toolbar">
                <div class="btn-group btn-group-sm" role="group">
                    <button class="btn btn-link" type="button" @onclick="_ => context.QueueDataUpdate()"><i class="fas fa-plus"></i>&nbsp;Add New</button>
                    <button class="btn btn-link" type="button" @onclick="_ => CheckAll(context)"><i class="far fa-check-square"></i>&nbsp;Select All</button>
                    <button class="btn btn-link" type="button"><i class="fas fa-print"></i>&nbsp;Print</button>
                    <button class="btn btn-link" type="button"><i class="fas fa-external-link-alt"></i>&nbsp;Export</button>
                </div>
            </div>
        </ToolbarTemplate>
        <CandyGridColumns>
            <CandyGridColumn Title="ID" Field="@nameof(Product.ProductId)" IsSortable="true"
                             OnDetailsButtonClick="OnDetailsButtonClick"
                             OnEditButtonClick="OnEditButtonClick"
                             OnCellCheckedChanged="OnCellCheckChanged" CheckedProperty="@nameof(Product.IsChecked)" />
            <CandyGridColumn Title="Name" Field="@nameof(Product.Name)" IsSearchable="true" IsSortable="true">
                <HeaderTemplate>
                    @($"Field: {context.Field}")
                </HeaderTemplate>
            </CandyGridColumn>
            <CandyGridColumn Title="Description" Field="@nameof(Product.Description)" IsSortable="true" />
            <CandyGridColumn Title="Price" Field="@nameof(Product.Price)" FormatString="{0:c2}" />
            <CandyGridColumn Title="Stock" Field="@nameof(Product.StockCount)" />

            <CandyGridColumn Title="Date" Context="item">
                <DataTemplate>
                    @($"UID: {(item as Product).DateCreated.ToShortDateString()}")
                </DataTemplate>
            </CandyGridColumn>
        </CandyGridColumns>
    </CandyGrid>
</div>

@code{
    private void CheckAll(CandyGrid sender)
    {
        foreach (var row in sender.Rows)
        {
            row.CssClass = "table-active";
            (row.DataItem as Product).IsChecked = true;
        }
    }

    private void OnBodyRowDoubleClick(GridRowMouseEventArgs e)
    {
        var product = e.DataItem as Product;
        if (product == null) return;


        product.IsChecked = !product.IsChecked;
        e.Row.CssClass = product.IsChecked ? "table-active" : null;

        product.Description = $"Item was {product.ProductId} double clicked!";
    }

    private void OnDetailsButtonClick(GridRowMouseEventArgs e)
    {
        var product = e.DataItem as Product;
        if (product == null) return;

        product.Description = $"Details for item {product.ProductId} clicked. Show a modal or something!";
    }

    private void OnEditButtonClick(GridRowMouseEventArgs e)
    {
        var product = e.DataItem as Product;
        if (product == null) return;

        product.Description = $"Product with ID = {product.ProductId} editing . . .";
    }

    private void OnCellCheckChanged(GridCellCheckboxEventArgs e)
    {
        var product = e.DataItem as Product;
        if (product == null) return;

        e.Row.CssClass = product.IsChecked ? "table-active" : null;
        product.Description = $"Product with ID = {product.ProductId}, on column {e.Column.Field} is now {(e.IsChecked ? "checked" : "unchecked")}.";
    }
}