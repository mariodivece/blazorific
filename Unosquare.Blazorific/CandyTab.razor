@inherits JsCandyComponentBase<CandyTab>

@if (TabSet is not null && TabSet.Mode == CandyTabMode.Normal)
{
    <li class="nav-item" role="presentation">
        <button type="button" @ref="Element"
            class="nav-link @(IsFirst ? "active" : null)"
            id="@($"{Id}-tab")"
            data-bs-toggle="tab" data-bs-target="@($"#{Id}")" role="tab" aria-controls="@Id" aria-selected="@IsActive">
            @Title
        </button>
    </li>
}
else
{
    <div class="accordion-item">
        <h2 class="accordion-header" id="@($"{Id}-tab")">
            <button type="button"
                class="accordion-button @(IsExpanded ? null : "collapsed")"
                data-bs-toggle="collapse"
                data-bs-target="@($"#{Id}")"
                aria-expanded="@(IsExpanded ? "true" : "false")"
                aria-controls="@Id">
                @Title
            </button>
        </h2>

        <div id="@Id" @ref="Element"
         class="accordion-collapse collapse @(IsExpanded ? "show" : null)"
         aria-labelledby="@($"{Id}-tab")"
         data-bs-parent="@($"#{TabSet?.Id ?? Extensions.GenerateRandomHtmlId()}")">
            <div class="accordion-body">
                @ChildContent
            </div>
        </div>
    </div>
}

@code {
    bool IsFirst => (TabSet?.IndexOf(this) ?? 0) == 0;
    bool IsExpanded => IsFirst && (TabSet?.Mode ?? CandyTabMode.Normal) != CandyTabMode.AccordionCollapsed;
}