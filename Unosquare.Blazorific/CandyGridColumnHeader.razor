@inherits CandyGridChildComponent
<div class="d-flex flex-nowrap">
    <div class="candygrid-column-sortable">
        @if (Column.IsSortable)
        {
            <a href="" @onclick:preventDefault @onclick="OnColumnSortClick">@(Column.Title ?? Column.Field)</a>
        }
        else
        {
            <span>@(Column.Title ?? Column.Field)</span>
        }
        <i class="fas @CaretCssClass"></i>
    </div>

    @if (ShowFilter)
    {
        <div class="ms-auto" @ref="ColumnFilterElement">
            <button type="button" class="btn candygrid-column-header-button @(Column.FilterOperator != CompareOperators.None ? "btn-warning" : "btn-light")">
                <i class="fas fa-filter"></i>
            </button>
            <div style="display: none">
                <div class="candygrid-filter-dialog">
                    <form @onsubmit="_ => OnApplyFilterClick()" @onsubmit:preventDefault>
                        <div class="pr-1 pl-1">
                            @if (FilterOperators.Count == 2)
                            {
                                <input type="hidden" @bind="FilterOperator" />
                            }
                            else
                            {
                                <select class="form-select form-select-sm" @bind="FilterOperator">
                                    @foreach (var kvp in FilterOperators)
                                    {
                                        <option value="@(kvp.Key)">@kvp.Value</option>
                                    }
                                </select>
                            }

                            @if (HasFilterOptions)
                            {
                                <div class="d-flex btn-group btn-group-sm mb-1">
                                    <button type="button" class="btn btn-sm btn-secondary"
                                    @onclick="_ => OnFilterOptionCheckTool(true)"
                                    @onclick:preventDefault="true"
                                    @onclick:stopPropagation="true">
                                        <i class="fas fa-check-double"></i>&nbsp;
                                    </button>
                                    <button type="button" class="btn btn-sm btn-secondary"
                                    @onclick="_ => OnFilterOptionCheckTool(false)"
                                    @onclick:preventDefault="true"
                                    @onclick:stopPropagation="true">
                                        <i class="fas fa-backspace"></i>&nbsp;
                                    </button>
                                </div>
                                <div style="overflow-y: scroll; max-height: 200px; min-width: 120px;">
                                    @foreach (var kvp in FilterOptions)
                                    {
                                        var key = kvp.Key;
                                        <label class="form-check"
                                   @onclick:stopPropagation="true"
                                   @ondblclick:stopPropagation="true">
                                            <input type="checkbox" class="form-check-input"
                                       @onchange="(e) => OnFilterOptionCheckedChanged(e, key)"
                                       checked="@(CheckedFilterOptions.ContainsKey(key) ? "checked" : null)" />
                                            <span class="form-check-label">@kvp.Value</span>
                                        </label>
                                    }
                                </div>
                            }
                            else if (IsBooleanInputType)
                            {
                                <label class="form-check">
                                    <input class="form-check-input mt-2" type="checkbox" @bind="BooleanFilterVal" />
                                </label>
                            }
                            else if (IsDateInputType)
                            {
                                <input class="form-control form-control-sm mt-2" type="@FilterInputType" @bind="DateFilterVal1" />
                            }
                            else
                            {
                                <input class="form-control form-control-sm mt-2" type="@FilterInputType" @bind="FilterVal1" autocomplete="off" inputmode="verbatim" placeholder="value" />
                            }

                            @if (FilterOperator == CompareOperators.Between)
                            {
                                if (IsDateInputType)
                                {
                                    <input class="form-control form-control-sm mt-2" type="@FilterInputType" @bind="DateFilterVal2" />
                                }
                                else
                                {
                                    <input class="form-control form-control-sm mt-2" type="@FilterInputType" @bind="FilterVal2" autocomplete="off" inputmode="verbatim" placeholder="and value">
                                }
                            }
                        </div>
                        <div class="d-flex justify-content-end">
                            <div class="btn-group ms-auto mt-1">
                                <button class="btn btn-success btn-sm candygrid-column-filter-apply" type="submit">
                                    <i class="fas fa-check-circle"></i>
                                </button>
                                <button class="btn btn-danger btn-sm candygrid-column-filter-apply" type="button" @onclick="() => OnClearFilterClick()">
                                    <i class="fas fa-times-circle"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
</div>