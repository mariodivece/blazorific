# This GitHub Action bumps up the <Version /> tag in the csproj file depending on the commit's comment:
#   SemVer format is: MAJOR.MINOR.PATCH-PRERELEASE
#   If the commit's comment contains the string [MAJOR], [MINOR] or [PATCH] it bumps it accordingly.
#   If no matching bump commment is found, the PRERELEASE component gets bumped.
# Finally, it builds the project in .net 5 and .6, and publishes it to the local GitHub package registry.
# by @geoperez and @mariodivece
name: Build and Publish to Github Registry
on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: 'Unosquare.Blazorific'
      PROJECT_FILE_PATH: '/home/runner/work/blazorific/blazorific/Unosquare.Blazorific/Unosquare.Blazorific.csproj'
      BUILD_PATH: '/home/runner/work/blazorific/blazorific/Unosquare.Blazorific/bin/Release'
      GITHUB_TOKEN: ${{ secrets.GPR_ACCESS_TOKEN }}
      PRE_VERSIONS_KEPT: 10
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ env.GITHUB_TOKEN }}
    - name: ü•ì Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
            5.0.x
            6.0.x
    - name: üêù Bump version
      uses: unosquare/bump-nuget-version@master 
      with:
        level: ${{ contains(github.event.head_commit.message, '[PATCH]') && 'patch' || contains(github.event.head_commit.message, '[MINOR]') && 'minor' || contains(github.event.head_commit.message, '[MAJOR]') && 'major' || 'prerelease' }}
        csproj: ${{ env.PROJECT_FILE_PATH }}
    - name: üèó Build and pack nuget
      run: |
        dotnet pack ${{ env.PROJECT_FILE_PATH }} --configuration Release
    - name: üç± Publish nuget
      uses: unosquare/publish-nuget-package@master 
      with:
        access-token: ${{ env.GITHUB_TOKEN }}
        path: ${{ env.BUILD_PATH }}
    - name: üìå Commit
      uses: EndBug/add-and-commit@v7
      with:
        message: '[skip ci]'
    - name: üåø Clean up stale packages
      uses: actions/delete-package-versions@v2
      with: 
        package-name: ${{ env.PACKAGE_NAME }}
        min-versions-to-keep: ${{ env.PRE_VERSIONS_KEPT }}
        delete-only-pre-release-versions: 'true'
